name: Kubernetes Message Board CI/CD Pipeline

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  
env:
  AWS_REGION: ca-central-1

jobs:
  
  # provision-infrastructure:
  #   name: Provision Infrastructure
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v3

  #     - name: Install Terraform
  #       uses: hashicorp/setup-terraform@v1

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ env.AWS_REGION }}
      
  #     - name: Initialize Terraform
  #       working-directory: cloud_infrastructure
  #       run: terraform init
      
  #     - name: Apply Terraform
  #       working-directory: cloud_infrastructure
  #       run: |
  #         terraform apply -auto-approve \
  #           -var "db_name=${{ secrets.MYSQL_DB_NAME }}" \
  #           -var "db_username=${{ secrets.MYSQL_DB_USERNAME }}" \
  #           -var "db_password=${{ secrets.MYSQL_DB_PASSWORD}}" \
  #           -var "hosted_zone_id=${{ secrets.HOSTED_ZONE_ID }}"
    
  build-docker-images:
    name: Build Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Frontend Image
        working-directory: frontend
        env:
          PRIVATE_ECR: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $PRIVATE_ECR/kubernetes-message-board:frontend-latest .
          docker push $PRIVATE_ECR/kubernetes-message-board:frontend-latest
      
      - name: Build and Push API Image
        working-directory: api
        env:
          PRIVATE_ECR: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $PRIVATE_ECR/kubernetes-message-board:api-latest .
          docker push $PRIVATE_ECR/kubernetes-message-board:api-latest

      
      
